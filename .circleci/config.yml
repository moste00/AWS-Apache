# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  print_pipeline_id:
    steps:
      - run: echo $CIRCLE_WORKFLOW_ID

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    
    environment:
      USER_NAME: Mostafa M. Kamal
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
      - run:
          name: "create a file"
          command: mkdir files ; echo "Hello File " > file.txt ; mv file.txt ./files/file.txt ; ls -a
      - run:
          name: "show name of user"
          command: echo $USER_NAME
      - persist_to_workspace:
          root: files
          paths:
            - file.txt
      - print_pipeline_id

  read-hello:
    docker:
      - image: cimg/base:stable
    
    steps:
      - attach_workspace:
          at: ./workspace

      - run: cat ./workspace/file.txt

  always-fail:
    docker:
     - image: circleci/node:13.8.0

    steps:
      - run:
          name: "will fail"
          command: cat doesNotExist.txt

      - run:
          name: "handle failure"
          when: on_fail
          command: "Ooopsie! It looks like you're trying to access a non-existent file :)"
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - read-hello:
          requires:
            - say-hello 
      - always-fail